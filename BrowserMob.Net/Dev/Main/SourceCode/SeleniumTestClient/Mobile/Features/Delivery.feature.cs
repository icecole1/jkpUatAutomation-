// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UAT.Mobile.Automation.Mobile.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Delivery")]
    public partial class DeliveryFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Delivery.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Delivery", "\tIn order place orders using different delivery options\r\n\tAs a customer\r\n\tI want " +
                    "to place an order using different delivery options available", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("customer delivery selection is displayed on the confirmation page for UK market")]
        [NUnit.Framework.CategoryAttribute("heartbeat")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("uk")]
        [NUnit.Framework.TestCaseAttribute("Standard", null)]
        [NUnit.Framework.TestCaseAttribute("Royal Mail", null)]
        [NUnit.Framework.TestCaseAttribute("Express", null)]
        [NUnit.Framework.TestCaseAttribute("Express Noon", null)]
        public virtual void CustomerDeliverySelectionIsDisplayedOnTheConfirmationPageForUKMarket(string deliveryOption, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "heartbeat",
                    "checkout",
                    "delivery",
                    "uk"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("customer delivery selection is displayed on the confirmation page for UK market", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
testRunner.When(string.Format("I click on a UK {0} delivery", deliveryOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.And("I place an order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("customer delivery selection is displayed on the confirmation page for US market")]
        [NUnit.Framework.CategoryAttribute("heartbeat")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("us")]
        [NUnit.Framework.TestCaseAttribute("Standard", null)]
        [NUnit.Framework.TestCaseAttribute("Premium", null)]
        [NUnit.Framework.TestCaseAttribute("Express", null)]
        public virtual void CustomerDeliverySelectionIsDisplayedOnTheConfirmationPageForUSMarket(string deliveryOption, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "heartbeat",
                    "checkout",
                    "delivery",
                    "us"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("customer delivery selection is displayed on the confirmation page for US market", @__tags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
testRunner.When(string.Format("I click on a US {0} delivery", deliveryOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
testRunner.And("I place an order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("customer delivery selection is displayed on the confirmation page for DE market")]
        [NUnit.Framework.CategoryAttribute("heartbeat")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("de")]
        [NUnit.Framework.TestCaseAttribute("Standard", null)]
        [NUnit.Framework.TestCaseAttribute("Express", null)]
        public virtual void CustomerDeliverySelectionIsDisplayedOnTheConfirmationPageForDEMarket(string deliveryOption, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "heartbeat",
                    "checkout",
                    "delivery",
                    "de"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("customer delivery selection is displayed on the confirmation page for DE market", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
testRunner.When(string.Format("I click on a DE {0} delivery", deliveryOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
testRunner.And("I place an order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("customer delivery selection is displayed on the confirmation page for FR market")]
        [NUnit.Framework.CategoryAttribute("heartbeat")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("fr")]
        [NUnit.Framework.TestCaseAttribute("Standard", null)]
        [NUnit.Framework.TestCaseAttribute("Premium", null)]
        public virtual void CustomerDeliverySelectionIsDisplayedOnTheConfirmationPageForFRMarket(string deliveryOption, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "heartbeat",
                    "checkout",
                    "delivery",
                    "fr"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("customer delivery selection is displayed on the confirmation page for FR market", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
testRunner.When(string.Format("I click on a FR {0} delivery", deliveryOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
testRunner.And("I place an order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("customer delivery selection is displayed on the confirmation page for AU market")]
        [NUnit.Framework.CategoryAttribute("heartbeat")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("au")]
        [NUnit.Framework.TestCaseAttribute("Standard", null)]
        public virtual void CustomerDeliverySelectionIsDisplayedOnTheConfirmationPageForAUMarket(string deliveryOption, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "heartbeat",
                    "checkout",
                    "delivery",
                    "au"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("customer delivery selection is displayed on the confirmation page for AU market", @__tags);
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
testRunner.When(string.Format("I click on a AU {0} delivery", deliveryOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
testRunner.And("I place an order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I am able to view a list of locations using click and collect delivery option for" +
            " UK market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("uk")]
        [NUnit.Framework.TestCaseAttribute("NW10 6NY", null)]
        public virtual void IAmAbleToViewAListOfLocationsUsingClickAndCollectDeliveryOptionForUKMarket(string postcode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "uk"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I am able to view a list of locations using click and collect delivery option for" +
                    " UK market", @__tags);
#line 64
this.ScenarioSetup(scenarioInfo);
#line 65
testRunner.Given("I have selected UK click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
testRunner.Then("the pickup locations are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
testRunner.And(string.Format("the {0} is shown on the location result panel", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I am able to view a list of locations using click and collect delivery option for" +
            " DE market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("de")]
        [NUnit.Framework.TestCaseAttribute("13435", null)]
        public virtual void IAmAbleToViewAListOfLocationsUsingClickAndCollectDeliveryOptionForDEMarket(string postcode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "de"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I am able to view a list of locations using click and collect delivery option for" +
                    " DE market", @__tags);
#line 74
this.ScenarioSetup(scenarioInfo);
#line 75
testRunner.Given("I have selected DE click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
testRunner.Then("the pickup locations are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
testRunner.And(string.Format("the {0} is shown on the location result panel", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I am able to view a list of locations using click and collect delivery option for" +
            " FR market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("fr")]
        [NUnit.Framework.TestCaseAttribute("75016", null)]
        public virtual void IAmAbleToViewAListOfLocationsUsingClickAndCollectDeliveryOptionForFRMarket(string postcode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "fr"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I am able to view a list of locations using click and collect delivery option for" +
                    " FR market", @__tags);
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
testRunner.Given("I have selected FR click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.Then("the pickup locations are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
testRunner.And(string.Format("the {0} is shown on the location result panel", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("validate the click and collect shows on the collection and delivery option panel " +
            "for UK market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("uk")]
        [NUnit.Framework.TestCaseAttribute("NW10 6NY", null)]
        public virtual void ValidateTheClickAndCollectShowsOnTheCollectionAndDeliveryOptionPanelForUKMarket(string postcode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "uk"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validate the click and collect shows on the collection and delivery option panel " +
                    "for UK market", @__tags);
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
testRunner.Given("I have selected UK click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.And("I select a location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
testRunner.Then("the location is shown on the delivery options panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 99
testRunner.And("the location is displayed on the collection address panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("validate the click and collect shows on the collection and delivery option panel " +
            "for DE market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("de")]
        [NUnit.Framework.TestCaseAttribute("13435", null)]
        public virtual void ValidateTheClickAndCollectShowsOnTheCollectionAndDeliveryOptionPanelForDEMarket(string postcode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "de"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validate the click and collect shows on the collection and delivery option panel " +
                    "for DE market", @__tags);
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
testRunner.Given("I have selected DE click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
testRunner.And("I select a location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
testRunner.Then("the location is shown on the delivery options panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 110
testRunner.And("the location is displayed on the collection address panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("validate the click and collect shows on the collection and delivery option panel " +
            "for FR market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("fr")]
        [NUnit.Framework.TestCaseAttribute("75016", null)]
        public virtual void ValidateTheClickAndCollectShowsOnTheCollectionAndDeliveryOptionPanelForFRMarket(string postcode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "fr"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validate the click and collect shows on the collection and delivery option panel " +
                    "for FR market", @__tags);
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
testRunner.Given("I have selected FR click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
testRunner.And("I select a location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.Then("the location is shown on the delivery options panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
testRunner.And("the location is displayed on the collection address panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Place a Click and Collect order without entering delivery contact number for UK m" +
            "arket")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("uk")]
        [NUnit.Framework.TestCaseAttribute("NW10 6NY", "", null)]
        [NUnit.Framework.TestCaseAttribute("NW10 6NY", "07953234253", null)]
        public virtual void PlaceAClickAndCollectOrderWithoutEnteringDeliveryContactNumberForUKMarket(string postcode, string contactNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "uk"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Place a Click and Collect order without entering delivery contact number for UK m" +
                    "arket", @__tags);
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
testRunner.Given("I have selected UK click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
testRunner.And("I select a location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
testRunner.And(string.Format("I continue on address panel and place order with {0} number", contactNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Place a Click and Collect order without entering delivery contact number for DE m" +
            "arket")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("de")]
        [NUnit.Framework.TestCaseAttribute("13435", "07953234253", null)]
        public virtual void PlaceAClickAndCollectOrderWithoutEnteringDeliveryContactNumberForDEMarket(string postcode, string postNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "de"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Place a Click and Collect order without entering delivery contact number for DE m" +
                    "arket", @__tags);
#line 139
this.ScenarioSetup(scenarioInfo);
#line 140
testRunner.Given("I have selected DE click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
testRunner.And("I select a location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
testRunner.And(string.Format("I continue on address panel and place order with {0} number", postNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Place a Click and Collect order without entering delivery contact number for FR m" +
            "arket")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("delivery")]
        [NUnit.Framework.CategoryAttribute("fr")]
        [NUnit.Framework.TestCaseAttribute("75016", "07953234253", null)]
        public virtual void PlaceAClickAndCollectOrderWithoutEnteringDeliveryContactNumberForFRMarket(string postcode, string contactNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "delivery",
                    "fr"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Place a Click and Collect order without entering delivery contact number for FR m" +
                    "arket", @__tags);
#line 150
this.ScenarioSetup(scenarioInfo);
#line 151
testRunner.Given("I have selected FR click and collect as a delivery method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
testRunner.When(string.Format("I enter a {0} postcode", postcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 153
testRunner.And("I select a location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
testRunner.And(string.Format("I continue on address panel and place order with {0} number", contactNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
testRunner.Then("The confirmation page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
