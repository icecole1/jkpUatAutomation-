// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UAT.Mobile.Automation.Mobile.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ShoppingBasket")]
    public partial class ShoppingBasketFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ShoppingBasket.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ShoppingBasket", "\tIn order to place an order\r\n\tAs a customer\r\n\tI want to be able to add multiple i" +
                    "tem to my basket", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The shopping basket contains the correct number of items")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("shoppingbag")]
        [NUnit.Framework.TestCaseAttribute("1", null)]
        [NUnit.Framework.TestCaseAttribute("2", null)]
        [NUnit.Framework.TestCaseAttribute("3", null)]
        public virtual void TheShoppingBasketContainsTheCorrectNumberOfItems(string numberOfProducts, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "shoppingbag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The shopping basket contains the correct number of items", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("I am on the product description page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
testRunner.When(string.Format("I add {0} products", numberOfProducts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.Then(string.Format("The checkout page contains {0} products", numberOfProducts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The basket has the correct value for the selected gift card for UK market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("shoppingbag")]
        [NUnit.Framework.CategoryAttribute("uk")]
        [NUnit.Framework.TestCaseAttribute("10", null)]
        [NUnit.Framework.TestCaseAttribute("20", null)]
        [NUnit.Framework.TestCaseAttribute("50", null)]
        [NUnit.Framework.TestCaseAttribute("100", null)]
        public virtual void TheBasketHasTheCorrectValueForTheSelectedGiftCardForUKMarket(string cardValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "shoppingbag",
                    "uk"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The basket has the correct value for the selected gift card for UK market", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given(string.Format("I have a {0} UK gift card in the basket", cardValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
testRunner.When("I go to the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
testRunner.Then(string.Format("The basket sub total value is {0}", cardValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The basket has the correct value for the selected gift card for US market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("shoppingbag")]
        [NUnit.Framework.CategoryAttribute("us")]
        [NUnit.Framework.TestCaseAttribute("25", null)]
        [NUnit.Framework.TestCaseAttribute("50", null)]
        [NUnit.Framework.TestCaseAttribute("75", null)]
        [NUnit.Framework.TestCaseAttribute("100", null)]
        [NUnit.Framework.TestCaseAttribute("250", null)]
        public virtual void TheBasketHasTheCorrectValueForTheSelectedGiftCardForUSMarket(string cardValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "shoppingbag",
                    "us"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The basket has the correct value for the selected gift card for US market", @__tags);
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given(string.Format("I have a {0} US gift card in the basket", cardValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
testRunner.When("I go to the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.Then(string.Format("The basket sub total value is {0}", cardValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The basket has the correct value for the selected gift card for AU market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("shoppingbag")]
        [NUnit.Framework.CategoryAttribute("au")]
        [NUnit.Framework.TestCaseAttribute("25", null)]
        [NUnit.Framework.TestCaseAttribute("50", null)]
        [NUnit.Framework.TestCaseAttribute("75", null)]
        [NUnit.Framework.TestCaseAttribute("100", null)]
        [NUnit.Framework.TestCaseAttribute("250", null)]
        public virtual void TheBasketHasTheCorrectValueForTheSelectedGiftCardForAUMarket(string cardValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "checkout",
                    "shoppingbag",
                    "au"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The basket has the correct value for the selected gift card for AU market", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
testRunner.Given(string.Format("I have a {0} AU gift card in the basket", cardValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
testRunner.When("I go to the checkout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
testRunner.Then(string.Format("The basket sub total value is {0}", cardValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I want to remove all products from the shopping basket")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("shoppingbag")]
        public virtual void IWantToRemoveAllProductsFromTheShoppingBasket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I want to remove all products from the shopping basket", new string[] {
                        "checkout",
                        "shoppingbag"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
testRunner.When("I remove all products from the basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
testRunner.Then("The basket is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I want to remove a product from the shopping basket")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("shoppingbag")]
        public virtual void IWantToRemoveAProductFromTheShoppingBasket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I want to remove a product from the shopping basket", new string[] {
                        "checkout",
                        "shoppingbag"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
testRunner.Given("I am on the checkout page and have 2 product(s) in the basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
testRunner.When("I remove 1 product(s)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
testRunner.Then("I have 1 product(s) in the basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As a customer with an Alabama delivery address the provisional tax label is displ" +
            "ayed on checkout for US Market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("us")]
        public virtual void AsACustomerWithAnAlabamaDeliveryAddressTheProvisionalTaxLabelIsDisplayedOnCheckoutForUSMarket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As a customer with an Alabama delivery address the provisional tax label is displ" +
                    "ayed on checkout for US Market", new string[] {
                        "checkout",
                        "us"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
testRunner.When("I enter Alabama as a delivery address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.And("I click to expand the shipping options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.Then("The provisional tax panel is displayed on checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As a customer with an Alabama delivery address the provisional tax label is displ" +
            "ayed on the confirmation page for US Market")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("us")]
        public virtual void AsACustomerWithAnAlabamaDeliveryAddressTheProvisionalTaxLabelIsDisplayedOnTheConfirmationPageForUSMarket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As a customer with an Alabama delivery address the provisional tax label is displ" +
                    "ayed on the confirmation page for US Market", new string[] {
                        "checkout",
                        "us"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
testRunner.When("I enter Alabama as a delivery address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
testRunner.And("I place an order here", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.Then("The provisional tax panel is displayed on the confirmation page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As a customer with a Jersey delivery address there is no tax on checkout for UK m" +
            "arket")]
        [NUnit.Framework.CategoryAttribute("checkout")]
        [NUnit.Framework.CategoryAttribute("uk")]
        public virtual void AsACustomerWithAJerseyDeliveryAddressThereIsNoTaxOnCheckoutForUKMarket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As a customer with a Jersey delivery address there is no tax on checkout for UK m" +
                    "arket", new string[] {
                        "checkout",
                        "uk"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
testRunner.Given("I am on the checkout page with a product in my basket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
testRunner.When("I enter Jersey as a delivery address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
testRunner.Then("The provisional tax panel is not displayed on checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
